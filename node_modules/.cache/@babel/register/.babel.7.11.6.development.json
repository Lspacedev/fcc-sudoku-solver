{
  "{\"sourceRoot\":\"/home/tshepo/boilerplate-project-sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tshepo/boilerplate-project-sudoku-solver\",\"filename\":\"/home/tshepo/boilerplate-project-sudoku-solver/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tshepo/boilerplate-project-sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tshepo/boilerplate-project-sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tshepo/boilerplate-project-sudoku-solver",
      "filename": "/home/tshepo/boilerplate-project-sudoku-solver/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tshepo/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tshepo/boilerplate-project-sudoku-solver/routes/api.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tshepo/boilerplate-project-sudoku-solver/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tshepo/boilerplate-project-sudoku-solver/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  var solver = new SudokuSolver();\n  app.route('/api/check').post(function (req, res) {\n    var puzzle = req.body.puzzle;\n    var coordinate = req.body.coordinate;\n    var value = req.body.value;\n    var regex1 = /^[a-iA-I][1-9]$/; //required field missing\n\n    if (!puzzle || !coordinate || !value) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    } else if (puzzle.length == 0 || coordinate.length == 0 || value.length == 0) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    } else if (puzzle == undefined || coordinate == undefined || value == undefined) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    } //Invalid coordinate\n\n\n    if (!regex1.test(coordinate)) {\n      res.json({\n        error: 'Invalid coordinate'\n      });\n      return;\n    }\n\n    if (!/^[1-9.]+$/.test(puzzle)) {\n      res.json({\n        error: 'Invalid characters in puzzle'\n      });\n      return;\n    }\n\n    if (!/^[1-9]$/.test(value)) {\n      res.json({\n        error: 'Invalid value'\n      });\n      return;\n    }\n\n    if (puzzle.length !== 81) {\n      res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      });\n      return;\n    }\n\n    var row = coordinate.split('')[0];\n    var col = coordinate.split('')[1];\n    var rowCheck = solver.checkRowPlacement(puzzle, row, col, value);\n    var colCheck = solver.checkColPlacement(puzzle, row, col, value);\n    var regionCheck = solver.checkRegionPlacement(puzzle, row, col, value);\n    var conflict = [];\n\n    if (rowCheck && colCheck && regionCheck) {\n      res.json({\n        valid: true\n      });\n      return;\n    } else {\n      if (!rowCheck) {\n        conflict.push('row');\n      }\n\n      if (!colCheck) {\n        conflict.push('column');\n      }\n\n      if (!regionCheck) {\n        conflict.push('region');\n      }\n\n      res.json({\n        valid: false,\n        conflict: conflict\n      });\n      return;\n    }\n  });\n  app.route('/api/solve').post(function (req, res) {\n    var puzzle = req.body.puzzle; //let isValid = false;\n\n    /* let row1 = puzzle.slice(0,3);\n     let row2 = puzzle.slice(10, 12)\n     console.log(row1)\n     console.log(row2)*/\n\n    if (!puzzle) {\n      res.json({\n        error: 'Required field missing'\n      });\n      return;\n    }\n\n    if (puzzle.length !== 81) {\n      res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      }); //isValid = true;\n\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: 'Invalid characters in puzzle'\n      }); // isValid = true;\n\n      return;\n    }\n\n    var solved = solver.solve(puzzle);\n\n    if (!solved) {\n      res.json({\n        error: 'Puzzle cannot be solved'\n      });\n    } else {\n      res.json({\n        solution: solved\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "module",
        "exports",
        "app",
        "solver",
        "route",
        "post",
        "req",
        "res",
        "puzzle",
        "body",
        "coordinate",
        "value",
        "regex1",
        "json",
        "error",
        "length",
        "undefined",
        "test",
        "row",
        "split",
        "col",
        "rowCheck",
        "checkRowPlacement",
        "colCheck",
        "checkColPlacement",
        "regionCheck",
        "checkRegionPlacement",
        "conflict",
        "valid",
        "push",
        "solved",
        "solve",
        "solution"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tshepo/boilerplate-project-sudoku-solver/routes/",
      "sourcesContent": [
        "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  \n  let solver = new SudokuSolver();\n\n  app.route('/api/check')\n    .post((req, res) => {\n      let puzzle = req.body.puzzle;\n      let coordinate = req.body.coordinate;\n      let value = req.body.value;\n      let regex1 = /^[a-iA-I][1-9]$/;\n\n      //required field missing\n      if (!puzzle || !coordinate || !value) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n\n      }else if (puzzle.length == 0 || coordinate.length == 0 || value.length == 0) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n\n      }else if (puzzle == undefined || coordinate == undefined || value == undefined) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n      }\n      \n      //Invalid coordinate\n      \n      if (!(regex1).test(coordinate)) {\n        res.json({ error: 'Invalid coordinate'});\n        return;\n\n      }\n      if (!/^[1-9.]+$/.test(puzzle)){\n        res.json({ error: 'Invalid characters in puzzle' });\n        return;\n      }\n\n      if(!(/^[1-9]$/.test(value))) {\n        res.json({ error: 'Invalid value' });\n        return;\n\n      }\n      if (puzzle.length !== 81) {\n        res.json({ error: 'Expected puzzle to be 81 characters long' });\n        return;\n      \n      }\n\n      let row = coordinate.split('')[0];\n      let col = coordinate.split('')[1];\n\n      let rowCheck = solver.checkRowPlacement(puzzle, row, col, value);\n      let colCheck = solver.checkColPlacement(puzzle, row, col, value);\n      let regionCheck = solver.checkRegionPlacement(puzzle, row, col, value);\n      let conflict = [];\n    \n      if(rowCheck && colCheck && regionCheck) {\n        res.json({ valid: true });\n        return;\n      } else {\n        if (!rowCheck) {\n          conflict.push('row');\n        }\n        if (!colCheck) {\n          conflict.push('column');\n        }\n        if (!regionCheck) {\n          conflict.push('region');\n        }\n        res.json({ valid: false, conflict: conflict });\n        return;\n      }\n      \n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n      const puzzle = req.body.puzzle;\n      //let isValid = false;\n\n     /* let row1 = puzzle.slice(0,3);\n      let row2 = puzzle.slice(10, 12)\n      console.log(row1)\n      console.log(row2)*/\n\n      if(!puzzle){\n         res.json({ error: 'Required field missing' });\n        return;\n      }\n      if(puzzle.length !== 81){\n        res.json({ error: 'Expected puzzle to be 81 characters long' });\n        //isValid = true;\n        return;\n      }\n\n      if(/[^0-9.]/g.test(puzzle)){\n        res.json({ error: 'Invalid characters in puzzle' });\n       // isValid = true;\n        return;\n      }\n\n      let solved = solver.solve(puzzle);\n      if(!solved){\n        res.json({ error: 'Puzzle cannot be solved' });\n      }else {\n        res.json({ solution: solved });\n      }\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1700300650246
  },
  "{\"sourceRoot\":\"/home/tshepo/boilerplate-project-sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tshepo/boilerplate-project-sudoku-solver\",\"filename\":\"/home/tshepo/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tshepo/boilerplate-project-sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tshepo/boilerplate-project-sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tshepo/boilerplate-project-sudoku-solver",
      "filename": "/home/tshepo/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tshepo/boilerplate-project-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tshepo/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/tshepo/boilerplate-project-sudoku-solver/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tshepo/boilerplate-project-sudoku-solver/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SudokuSolver = /*#__PURE__*/function () {\n  function SudokuSolver() {\n    _classCallCheck(this, SudokuSolver);\n  }\n\n  _createClass(SudokuSolver, [{\n    key: \"validate\",\n    value: function validate(puzzleString) {}\n  }, {\n    key: \"convertToNum\",\n    value: function convertToNum(row) {\n      var rowAlpha = row.toUpperCase();\n\n      switch (rowAlpha) {\n        case \"A\":\n          return 1;\n\n        case \"B\":\n          return 2;\n\n        case \"C\":\n          return 3;\n\n        case \"D\":\n          return 4;\n\n        case \"E\":\n          return 5;\n\n        case \"F\":\n          return 6;\n\n        case \"G\":\n          return 7;\n\n        case \"H\":\n          return 8;\n\n        case \"I\":\n          return 9;\n\n        default:\n          return \"none\";\n      }\n    }\n  }, {\n    key: \"checkRowPlacement\",\n    value: function checkRowPlacement(puzzleString, row, col, value) {\n      var grid = this.makeGrid(puzzleString);\n      row = this.convertToNum(row);\n      if (grid[row - 1][col - 1] == value) return true;\n\n      for (var i = 0; i < 9; i++) {\n        if (grid[row - 1][i] == value) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkColPlacement\",\n    value: function checkColPlacement(puzzleString, row, col, value) {\n      var grid = this.makeGrid(puzzleString);\n      row = this.convertToNum(row);\n      if (grid[row - 1][col - 1] == value) return true;\n\n      for (var i = 0; i < 9; i++) {\n        if (grid[i][col - 1] == value) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkRegionPlacement\",\n    value: function checkRegionPlacement(puzzleString, row, col, value) {\n      var grid = this.makeGrid(puzzleString);\n      row = this.convertToNum(row);\n      if (grid[row - 1][col - 1] == value) return true;\n      var rowStart = row - row % 3,\n          colStart = col - col % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var k = 0; k < 3; k++) {\n          if (grid[i + rowStart][k + colStart] == value) return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"solveSudoku\",\n    value: function solveSudoku(grid, row, col) {\n      var N = 9;\n      if (row == N - 1 && col == N) return grid;\n\n      if (col == N) {\n        row++;\n        col = 0;\n      }\n\n      if (grid[row][col] != 0) return this.solveSudoku(grid, row, col + 1);\n\n      for (var num = 1; num < 10; num++) {\n        if (this.isSafe(grid, row, col, num)) {\n          grid[row][col] = num;\n          if (this.solveSudoku(grid, row, col + 1)) return grid;\n        }\n\n        grid[row][col] = 0;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isSafe\",\n    value: function isSafe(grid, row, col, num) {\n      for (var x = 0; x <= 8; x++) {\n        if (grid[row][x] == num) return false;\n      }\n\n      for (var _x = 0; _x <= 8; _x++) {\n        if (grid[_x][col] == num) return false;\n      }\n\n      var startRow = row - row % 3,\n          startCol = col - col % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          if (grid[i + startRow][j + startCol] == num) return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"makeGrid\",\n    value: function makeGrid(puzzleString) {\n      var grid = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n      var row = -1;\n      var col = 0;\n\n      for (var i = 0; i < puzzleString.length; i++) {\n        if (i % 9 == 0) {\n          row++;\n        }\n\n        if (col % 9 == 0) {\n          col = 0;\n        }\n\n        grid[row][col] = puzzleString[i] === '.' ? 0 : +puzzleString[i];\n        col++;\n      }\n\n      return grid;\n    }\n  }, {\n    key: \"resetGrid\",\n    value: function resetGrid(grid) {\n      return grid.flat().join(\"\");\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(puzzleString) {\n      if (puzzleString.length != 81) {\n        return false;\n      }\n\n      if (/[^0-9.]/g.test(puzzleString)) {\n        return false;\n      }\n\n      var grid = this.makeGrid(puzzleString);\n      var solve = this.solveSudoku(grid, 0, 0);\n\n      if (solve == false) {\n        return false;\n      }\n\n      var solved = this.resetGrid(solve);\n      return solved;\n    }\n  }]);\n\n  return SudokuSolver;\n}();\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "SudokuSolver",
        "puzzleString",
        "row",
        "rowAlpha",
        "toUpperCase",
        "col",
        "value",
        "grid",
        "makeGrid",
        "convertToNum",
        "i",
        "rowStart",
        "colStart",
        "k",
        "N",
        "solveSudoku",
        "num",
        "isSafe",
        "x",
        "startRow",
        "startCol",
        "j",
        "length",
        "flat",
        "join",
        "test",
        "solve",
        "solved",
        "resetGrid",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tshepo/boilerplate-project-sudoku-solver/controllers/",
      "sourcesContent": [
        "class SudokuSolver {\n\n  validate(puzzleString) {\n  }\n\n  convertToNum(row){\n    let rowAlpha = row.toUpperCase();\n      switch (rowAlpha) {\n        case \"A\":\n          return 1;\n        case \"B\":\n          return 2;\n        case \"C\":\n          return 3;\n        case \"D\":\n          return 4;\n        case \"E\":\n          return 5;\n        case \"F\":\n          return 6;\n        case \"G\":\n          return 7;\n        case \"H\":\n          return 8;\n        case \"I\":\n          return 9;\n        default:\n          return \"none\";\n      }\n  }\n\n  checkRowPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n  \n    if(grid[row - 1][col - 1] == value) return true;\n    for (let i = 0; i < 9; i++) {\n      if (grid[row - 1][i] == value) return false;\n    }\n    return true;\n  }\n\n  checkColPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n    \n    if(grid[row - 1][col - 1] == value) return true;\n    for (let i = 0; i < 9; i++) {\n      if (grid[i][col - 1] == value) return false;\n    }\n    return true;\n  }\n\n  checkRegionPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n  \n    if(grid[row - 1][col - 1] == value) return true;\n    \n    let rowStart = row - row % 3,\n    colStart = col - col % 3;\n  \n    for(let i = 0; i < 3; i++) {\n      for(let k = 0; k < 3; k++){\n        if(grid[i + rowStart][k + colStart] == value) return false;\n      } \n    }\n    return true;\n  \n  }\n\n  solveSudoku(grid, row, col){\n    let N = 9;\n    if (row == N - 1 && col == N) return grid;\n    if (col == N){\n        row++;\n        col = 0;\n    }\n\n\n    if (grid[row][col] != 0) return this.solveSudoku(grid, row, col + 1);\n\n    for(let num = 1; num < 10; num++){\n        if (this.isSafe(grid, row, col, num)){\n            grid[row][col] = num;\n            if (this.solveSudoku(grid, row, col + 1)) return grid;\n        }\n        grid[row][col] = 0;\n    }\n    return false;\n  }\n\n  isSafe(grid, row, col, num){\n    for(let x = 0; x <= 8; x++)\n        if (grid[row][x] == num)\n            return false;\n\n\n    for(let x = 0; x <= 8; x++)\n        if (grid[x][col] == num)\n            return false;\n\n\n    let startRow = row - row % 3, \n        startCol = col - col % 3;\n\n    for(let i = 0; i < 3; i++)\n        for(let j = 0; j < 3; j++)\n            if (grid[i + startRow][j + startCol] == num)\n                return false;\n\n    return true;\n  }\n\n  makeGrid(puzzleString) {\n    let grid = [\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n              ];\n    let row = -1;\n    let col = 0;\n    for(let i = 0; i < puzzleString.length; i++){\n      if(i % 9 == 0){\n        row++;\n      }\n      if(col % 9 == 0){\n        col = 0;\n      }\n      grid[row][col] = puzzleString[i] === '.' ? 0 : +puzzleString[i];\n      col++;\n    }\n    return grid;\n    \n  }\n  resetGrid(grid) {\n    return grid.flat().join(\"\");\n  }\n\n  solve(puzzleString) {\n    if (puzzleString.length != 81) {\n      return false;\n    }\n    if (/[^0-9.]/g.test(puzzleString)) {\n      return false;\n    }\n    let grid = this.makeGrid(puzzleString);\n    let solve = this.solveSudoku(grid, 0, 0);\n    if (solve == false){\n      return false;\n    }\n    let solved = this.resetGrid(solve);\n    return solved;\n  \n  } \n\n}\n\nmodule.exports = SudokuSolver;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1700296065891
  },
  "{\"sourceRoot\":\"/home/tshepo/repos/fcc-sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tshepo/repos/fcc-sudoku-solver\",\"filename\":\"/home/tshepo/repos/fcc-sudoku-solver/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tshepo/repos/fcc-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tshepo/repos/fcc-sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tshepo/repos/fcc-sudoku-solver",
      "filename": "/home/tshepo/repos/fcc-sudoku-solver/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tshepo/repos/fcc-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tshepo/repos/fcc-sudoku-solver/routes/api.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/tshepo/repos/fcc-sudoku-solver/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tshepo/repos/fcc-sudoku-solver/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  let solver = new SudokuSolver();\n  app.route('/api/check').post((req, res) => {\n    let puzzle = req.body.puzzle;\n    let coordinate = req.body.coordinate;\n    let value = req.body.value;\n    let regex1 = /^[a-iA-I][1-9]$/; //required field missing\n\n    if (!puzzle || !coordinate || !value) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    } else if (puzzle.length == 0 || coordinate.length == 0 || value.length == 0) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    } else if (puzzle == undefined || coordinate == undefined || value == undefined) {\n      res.json({\n        error: 'Required field(s) missing'\n      });\n      return;\n    } //Invalid coordinate\n\n\n    if (!regex1.test(coordinate)) {\n      res.json({\n        error: 'Invalid coordinate'\n      });\n      return;\n    }\n\n    if (puzzle.length != 81) {\n      res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      });\n      return;\n    }\n\n    if (!/^[1-9.]+$/.test(puzzle)) {\n      res.json({\n        error: 'Invalid characters in puzzle'\n      });\n      return;\n    }\n\n    if (!/^[1-9]$/.test(value)) {\n      res.json({\n        error: 'Invalid value'\n      });\n      return;\n    }\n\n    let row = coordinate.split('')[0];\n    let col = coordinate.split('')[1];\n    let rowCheck = solver.checkRowPlacement(puzzle, row, col, value);\n    let colCheck = solver.checkColPlacement(puzzle, row, col, value);\n    let regionCheck = solver.checkRegionPlacement(puzzle, row, col, value);\n    let conflict = [];\n\n    if (rowCheck && colCheck && regionCheck) {\n      res.json({\n        valid: true\n      });\n      return;\n    } else {\n      if (!rowCheck) {\n        conflict.push('row');\n      }\n\n      if (!colCheck) {\n        conflict.push('column');\n      }\n\n      if (!regionCheck) {\n        conflict.push('region');\n      }\n\n      res.json({\n        valid: false,\n        conflict: conflict\n      });\n      return;\n    }\n  });\n  app.route('/api/solve').post((req, res) => {\n    const puzzle = req.body.puzzle; //let isValid = false;\n\n    /* let row1 = puzzle.slice(0,3);\n     let row2 = puzzle.slice(10, 12)\n     console.log(row1)\n     console.log(row2)*/\n\n    if (!puzzle) {\n      res.json({\n        error: 'Required field missing'\n      });\n      return;\n    }\n\n    if (puzzle.length !== 81) {\n      res.json({\n        error: 'Expected puzzle to be 81 characters long'\n      }); //isValid = true;\n\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: 'Invalid characters in puzzle'\n      }); // isValid = true;\n\n      return;\n    }\n\n    let solved = solver.solve(puzzle);\n\n    if (!solved) {\n      res.json({\n        error: 'Puzzle cannot be solved'\n      });\n    } else {\n      res.json({\n        solution: solved\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "module",
        "exports",
        "app",
        "solver",
        "route",
        "post",
        "req",
        "res",
        "puzzle",
        "body",
        "coordinate",
        "value",
        "regex1",
        "json",
        "error",
        "length",
        "undefined",
        "test",
        "row",
        "split",
        "col",
        "rowCheck",
        "checkRowPlacement",
        "colCheck",
        "checkColPlacement",
        "regionCheck",
        "checkRegionPlacement",
        "conflict",
        "valid",
        "push",
        "solved",
        "solve",
        "solution"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tshepo/repos/fcc-sudoku-solver/routes/",
      "sourcesContent": [
        "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  \n  let solver = new SudokuSolver();\n\n  app.route('/api/check')\n    .post((req, res) => {\n      let puzzle = req.body.puzzle;\n      let coordinate = req.body.coordinate;\n      let value = req.body.value;\n      let regex1 = /^[a-iA-I][1-9]$/;\n\n      //required field missing\n      if (!puzzle || !coordinate || !value) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n\n      }else if (puzzle.length == 0 || coordinate.length == 0 || value.length == 0) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n\n      }else if (puzzle == undefined || coordinate == undefined || value == undefined) {\n        res.json({ error: 'Required field(s) missing' });\n        return;\n      }\n      \n      //Invalid coordinate\n      \n      if (!(regex1).test(coordinate)) {\n        res.json({ error: 'Invalid coordinate'});\n        return;\n\n      }\n      if (puzzle.length != 81) {\n        res.json({ error: 'Expected puzzle to be 81 characters long' });\n        return;\n      \n      }\n      if (!/^[1-9.]+$/.test(puzzle)){\n        res.json({ error: 'Invalid characters in puzzle' });\n        return;\n      }\n\n      if(!(/^[1-9]$/.test(value))) {\n        res.json({ error: 'Invalid value' });\n        return;\n\n      }\n  \n\n      let row = coordinate.split('')[0];\n      let col = coordinate.split('')[1];\n\n      let rowCheck = solver.checkRowPlacement(puzzle, row, col, value);\n      let colCheck = solver.checkColPlacement(puzzle, row, col, value);\n      let regionCheck = solver.checkRegionPlacement(puzzle, row, col, value);\n      let conflict = [];\n    \n      if(rowCheck && colCheck && regionCheck) {\n        res.json({ valid: true });\n        return;\n      } else {\n        if (!rowCheck) {\n          conflict.push('row');\n        }\n        if (!colCheck) {\n          conflict.push('column');\n        }\n        if (!regionCheck) {\n          conflict.push('region');\n        }\n        res.json({ valid: false, conflict: conflict });\n        return;\n      }\n      \n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n      const puzzle = req.body.puzzle;\n      //let isValid = false;\n\n     /* let row1 = puzzle.slice(0,3);\n      let row2 = puzzle.slice(10, 12)\n      console.log(row1)\n      console.log(row2)*/\n\n      if(!puzzle){\n         res.json({ error: 'Required field missing' });\n        return;\n      }\n      if(puzzle.length !== 81){\n        res.json({ error: 'Expected puzzle to be 81 characters long' });\n        //isValid = true;\n        return;\n      }\n\n      if(/[^0-9.]/g.test(puzzle)){\n        res.json({ error: 'Invalid characters in puzzle' });\n       // isValid = true;\n        return;\n      }\n\n      let solved = solver.solve(puzzle);\n      if(!solved){\n        res.json({ error: 'Puzzle cannot be solved' });\n      }else {\n        res.json({ solution: solved });\n      }\n    });\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1700301480970
  },
  "{\"sourceRoot\":\"/home/tshepo/repos/fcc-sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tshepo/repos/fcc-sudoku-solver\",\"filename\":\"/home/tshepo/repos/fcc-sudoku-solver/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tshepo/repos/fcc-sudoku-solver\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/tshepo/repos/fcc-sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/tshepo/repos/fcc-sudoku-solver",
      "filename": "/home/tshepo/repos/fcc-sudoku-solver/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/tshepo/repos/fcc-sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/tshepo/repos/fcc-sudoku-solver/controllers/sudoku-solver.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/tshepo/repos/fcc-sudoku-solver/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/tshepo/repos/fcc-sudoku-solver/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "class SudokuSolver {\n  validate(puzzleString) {}\n\n  convertToNum(row) {\n    let rowAlpha = row.toUpperCase();\n\n    switch (rowAlpha) {\n      case \"A\":\n        return 1;\n\n      case \"B\":\n        return 2;\n\n      case \"C\":\n        return 3;\n\n      case \"D\":\n        return 4;\n\n      case \"E\":\n        return 5;\n\n      case \"F\":\n        return 6;\n\n      case \"G\":\n        return 7;\n\n      case \"H\":\n        return 8;\n\n      case \"I\":\n        return 9;\n\n      default:\n        return \"none\";\n    }\n  }\n\n  checkRowPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n    if (grid[row - 1][col - 1] == value) return true;\n\n    for (let i = 0; i < 9; i++) {\n      if (grid[row - 1][i] == value) return false;\n    }\n\n    return true;\n  }\n\n  checkColPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n    if (grid[row - 1][col - 1] == value) return true;\n\n    for (let i = 0; i < 9; i++) {\n      if (grid[i][col - 1] == value) return false;\n    }\n\n    return true;\n  }\n\n  checkRegionPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n    if (grid[row - 1][col - 1] == value) return true;\n    let rowStart = row - row % 3,\n        colStart = col - col % 3;\n\n    for (let i = 0; i < 3; i++) {\n      for (let k = 0; k < 3; k++) {\n        if (grid[i + rowStart][k + colStart] == value) return false;\n      }\n    }\n\n    return true;\n  }\n\n  solveSudoku(grid, row, col) {\n    let N = 9;\n    if (row == N - 1 && col == N) return grid;\n\n    if (col == N) {\n      row++;\n      col = 0;\n    }\n\n    if (grid[row][col] != 0) return this.solveSudoku(grid, row, col + 1);\n\n    for (let num = 1; num < 10; num++) {\n      if (this.isSafe(grid, row, col, num)) {\n        grid[row][col] = num;\n        if (this.solveSudoku(grid, row, col + 1)) return grid;\n      }\n\n      grid[row][col] = 0;\n    }\n\n    return false;\n  }\n\n  isSafe(grid, row, col, num) {\n    for (let x = 0; x <= 8; x++) if (grid[row][x] == num) return false;\n\n    for (let x = 0; x <= 8; x++) if (grid[x][col] == num) return false;\n\n    let startRow = row - row % 3,\n        startCol = col - col % 3;\n\n    for (let i = 0; i < 3; i++) for (let j = 0; j < 3; j++) if (grid[i + startRow][j + startCol] == num) return false;\n\n    return true;\n  }\n\n  makeGrid(puzzleString) {\n    let grid = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n    let row = -1;\n    let col = 0;\n\n    for (let i = 0; i < puzzleString.length; i++) {\n      if (i % 9 == 0) {\n        row++;\n      }\n\n      if (col % 9 == 0) {\n        col = 0;\n      }\n\n      grid[row][col] = puzzleString[i] === '.' ? 0 : +puzzleString[i];\n      col++;\n    }\n\n    return grid;\n  }\n\n  resetGrid(grid) {\n    return grid.flat().join(\"\");\n  }\n\n  solve(puzzleString) {\n    if (puzzleString.length != 81) {\n      return false;\n    }\n\n    if (/[^0-9.]/g.test(puzzleString)) {\n      return false;\n    }\n\n    let grid = this.makeGrid(puzzleString);\n    let solve = this.solveSudoku(grid, 0, 0);\n\n    if (solve == false) {\n      return false;\n    }\n\n    let solved = this.resetGrid(solve);\n    return solved;\n  }\n\n}\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "SudokuSolver",
        "validate",
        "puzzleString",
        "convertToNum",
        "row",
        "rowAlpha",
        "toUpperCase",
        "checkRowPlacement",
        "col",
        "value",
        "grid",
        "makeGrid",
        "i",
        "checkColPlacement",
        "checkRegionPlacement",
        "rowStart",
        "colStart",
        "k",
        "solveSudoku",
        "N",
        "num",
        "isSafe",
        "x",
        "startRow",
        "startCol",
        "j",
        "length",
        "resetGrid",
        "flat",
        "join",
        "solve",
        "test",
        "solved",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/tshepo/repos/fcc-sudoku-solver/controllers/",
      "sourcesContent": [
        "class SudokuSolver {\n\n  validate(puzzleString) {\n  }\n\n  convertToNum(row){\n    let rowAlpha = row.toUpperCase();\n      switch (rowAlpha) {\n        case \"A\":\n          return 1;\n        case \"B\":\n          return 2;\n        case \"C\":\n          return 3;\n        case \"D\":\n          return 4;\n        case \"E\":\n          return 5;\n        case \"F\":\n          return 6;\n        case \"G\":\n          return 7;\n        case \"H\":\n          return 8;\n        case \"I\":\n          return 9;\n        default:\n          return \"none\";\n      }\n  }\n\n  checkRowPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n  \n    if(grid[row - 1][col - 1] == value) return true;\n    for (let i = 0; i < 9; i++) {\n      if (grid[row - 1][i] == value) return false;\n    }\n    return true;\n  }\n\n  checkColPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n    \n    if(grid[row - 1][col - 1] == value) return true;\n    for (let i = 0; i < 9; i++) {\n      if (grid[i][col - 1] == value) return false;\n    }\n    return true;\n  }\n\n  checkRegionPlacement(puzzleString, row, col, value) {\n    let grid = this.makeGrid(puzzleString);\n    row = this.convertToNum(row);\n  \n    if(grid[row - 1][col - 1] == value) return true;\n    \n    let rowStart = row - row % 3,\n    colStart = col - col % 3;\n  \n    for(let i = 0; i < 3; i++) {\n      for(let k = 0; k < 3; k++){\n        if(grid[i + rowStart][k + colStart] == value) return false;\n      } \n    }\n    return true;\n  \n  }\n\n  solveSudoku(grid, row, col){\n    let N = 9;\n    if (row == N - 1 && col == N) return grid;\n    if (col == N){\n        row++;\n        col = 0;\n    }\n\n\n    if (grid[row][col] != 0) return this.solveSudoku(grid, row, col + 1);\n\n    for(let num = 1; num < 10; num++){\n        if (this.isSafe(grid, row, col, num)){\n            grid[row][col] = num;\n            if (this.solveSudoku(grid, row, col + 1)) return grid;\n        }\n        grid[row][col] = 0;\n    }\n    return false;\n  }\n\n  isSafe(grid, row, col, num){\n    for(let x = 0; x <= 8; x++)\n        if (grid[row][x] == num)\n            return false;\n\n\n    for(let x = 0; x <= 8; x++)\n        if (grid[x][col] == num)\n            return false;\n\n\n    let startRow = row - row % 3, \n        startCol = col - col % 3;\n\n    for(let i = 0; i < 3; i++)\n        for(let j = 0; j < 3; j++)\n            if (grid[i + startRow][j + startCol] == num)\n                return false;\n\n    return true;\n  }\n\n  makeGrid(puzzleString) {\n    let grid = [\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n               [0,0,0,0,0,0,0,0,0],\n              ];\n    let row = -1;\n    let col = 0;\n    for(let i = 0; i < puzzleString.length; i++){\n      if(i % 9 == 0){\n        row++;\n      }\n      if(col % 9 == 0){\n        col = 0;\n      }\n      grid[row][col] = puzzleString[i] === '.' ? 0 : +puzzleString[i];\n      col++;\n    }\n    return grid;\n    \n  }\n  resetGrid(grid) {\n    return grid.flat().join(\"\");\n  }\n\n  solve(puzzleString) {\n    if (puzzleString.length != 81) {\n      return false;\n    }\n    if (/[^0-9.]/g.test(puzzleString)) {\n      return false;\n    }\n    let grid = this.makeGrid(puzzleString);\n    let solve = this.solveSudoku(grid, 0, 0);\n    if (solve == false){\n      return false;\n    }\n    let solved = this.resetGrid(solve);\n    return solved;\n  \n  } \n\n}\n\nmodule.exports = SudokuSolver;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1700296065891
  }
}